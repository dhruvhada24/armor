name: 🚀 Deploy ARMOR Full Stack

on:
  push:
    branches:
      - devops
  workflow_dispatch:

jobs:
  deploy:
    name: 🧩 Deploy Backend to ECS + Frontend to S3
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: 🧠 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      # Setup Node
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      # Configure AWS credentials
      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ----- 🐳 BACKEND -----
      - name: 📦 Build Docker image for backend
        working-directory: backend
        run: |
          docker buildx build --platform linux/amd64 -t armor-backend .

      - name: 🪣 Push Docker image to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}
          docker tag armor-backend:latest ${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

      - name: 🚀 Update ECS Service
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --force-new-deployment

      # ----- 🎨 FRONTEND -----
      - name: 🧱 Build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: ☁️ Deploy frontend to S3
        run: |
          aws s3 sync frontend/dist s3://${{ secrets.S3_BUCKET }} --delete
          echo "✅ Frontend uploaded to S3"

      - name: 🌍 Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "🚀 CloudFront cache invalidated successfully!"

